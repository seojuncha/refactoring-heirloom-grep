/home/sj/1/refactoring-heirloom-grep/before/grep.c:102:1: warning: function 'loconv' has cognitive complexity of 74 (threshold 25) [readability-function-cognitive-complexity]
loconv(register char *dst, register char *src, size_t sz)
^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:106:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mbcode) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:111:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (sz > 0) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:112:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((*src & 0200) == 0) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: nesting level increased to 4
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +5, including nesting penalty of 4, nesting level increased to 5
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +6, including nesting penalty of 5, nesting level increased to 6
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +7, including nesting penalty of 6, nesting level increased to 7
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +1
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +1, nesting level increased to 6
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:113:14: note: +1, nesting level increased to 5
                                *dst++ = tolower(*src);
                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:116:11: note: +1, nesting level increased to 3
                        } else if ((len = mbtowc(&wc, src, sz)) <= 0 ||
                               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:116:49: note: +1
                        } else if ((len = mbtowc(&wc, src, sz)) <= 0 ||
                                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:120:6: note: +1, nesting level increased to 3
                        } else {
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:122:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (len >= mb_cur_max) {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:123:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((nlen = wctomb(dst, wc)) <= len) {
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:127:8: note: +1, nesting level increased to 5
                                        } else {
                                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:131:7: note: +1, nesting level increased to 4
                                } else {
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:132:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((nlen = wctomb(mb, wc)) <= len) {
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:135:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                for (i = 0; i < nlen; i++)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:137:8: note: +1, nesting level increased to 5
                                        } else {
                                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:144:4: note: +1, nesting level increased to 1
        } else {
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:145:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (sz--) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: nesting level increased to 3
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +4, including nesting penalty of 3, nesting level increased to 4
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +5, including nesting penalty of 4, nesting level increased to 5
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +6, including nesting penalty of 5, nesting level increased to 6
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +1
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +1, nesting level increased to 5
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:146:13: note: +1, nesting level increased to 4
                        *dst++ = tolower(*src & 0377);
                                 ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:121:10: warning: narrowing conversion from 'wint_t' (aka 'unsigned int') to signed type 'wchar_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                wc = towlower(wc);
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:179:3: warning: the result from calling 'memcpy' is not null-terminated [bugprone-not-null-terminated-result]
                memcpy(wp, "^\\<", 3);
                ^~~~~~           ~~~
                strcpy
/home/sj/1/refactoring-heirloom-grep/before/grep.c:181:3: warning: the result from calling 'memcpy' is not null-terminated [bugprone-not-null-terminated-result]
                memcpy(wp, "\\<", 2);
                ^~~~~~          ~~~
                strcpy
/home/sj/1/refactoring-heirloom-grep/before/grep.c:191:1: warning: function 'redirect' has cognitive complexity of 43 (threshold 25) [readability-function-cognitive-complexity]
redirect(struct iblok *ip, const char *arg0, const char *arg1)
^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:197:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (pipe(pd) < 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:199:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        switch (pid = fork()) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:201:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lseek(ip->ib_fd, -(ip->ib_end - ip->ib_cur),
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:204:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (pipe(xpd) == 0 && fork() == 0) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:204:23: note: +1
                        if (pipe(xpd) == 0 && fork() == 0) {
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:207:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                for (;;) {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:210:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        do {
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:211:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if ((wo = write(xpd[1],
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:215:8: note: +7, including nesting penalty of 6, nesting level increased to 7
                                                        if (errno == EINTR)
                                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:221:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (ib_read(ip) == EOF)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:226:6: note: +1, nesting level increased to 3
                        } else {
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:231:5: note: +1, nesting level increased to 2
                } else {
                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:232:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (ip->ib_fd)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:235:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (ip->ib_fd)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:237:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:252:9: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                nip = ib_alloc(pd[0], 0);
                      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:26: warning: 3 adjacent parameters of 'report' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
report(const char *line, size_t llen, off_t bcnt, int addnl)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:33: note: the first parameter in the range is 'llen'
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                ^~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:55: note: the last parameter in the range is 'addnl'
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                                      ^~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:26: note: 
report(const char *line, size_t llen, off_t bcnt, int addnl)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:39: note: 'size_t' and 'off_t' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'off_t' (as 'long'), 'off_t' (as 'long') -> 'size_t' (as 'unsigned long')
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:26: note: 
report(const char *line, size_t llen, off_t bcnt, int addnl)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:51: note: 'size_t' and 'int' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'int', 'int' -> 'size_t' (as 'unsigned long')
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:39: note: 
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:262:51: note: 'off_t' and 'int' may be implicitly converted: 'off_t' (as 'long') -> 'int', 'int' -> 'off_t' (as 'long')
report(const char *line, size_t llen, off_t bcnt, int addnl)
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:350:1: warning: function 'grep' has cognitive complexity of 69 (threshold 25) [readability-function-cognitive-complexity]
grep(struct iblok *ip)
^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:360:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (ib_read(ip) == EOF)
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:363:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (zflag) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:365:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:367:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (sz > 3 && memcmp(ip->ib_cur, "BZh", 3) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:367:15: note: +1
                        if (sz > 3 && memcmp(ip->ib_cur, "BZh", 3) == 0)
                                   ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:369:9: note: +1, nesting level increased to 3
                        else if (sz > 2 &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:369:20: note: +1
                        else if (sz > 2 &&
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:372:9: note: +1, nesting level increased to 3
                        else if (sz > 2 &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:372:20: note: +1
                        else if (sz > 2 &&
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:375:4: note: +1, nesting level increased to 3
                        else
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:377:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (np == NULL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:379:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (ip->ib_fd)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:381:4: note: +1, nesting level increased to 3
                        else
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:384:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (ib_read(ip) == EOF)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:389:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:390:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (lastnl = ip->ib_end - 1;
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:391:21: note: +1
                                *lastnl != '\n' && lastnl > ip->ib_cur;
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:393:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (hadnl = (ip->ib_cur < ip->ib_end && *lastnl == '\n'))
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:393:40: note: +1
                if (hadnl = (ip->ib_cur < ip->ib_end && *lastnl == '\n'))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:394:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (range(ip, lastnl))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:396:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lastnl < ip->ib_end - hadnl) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:406:5: note: +1, nesting level increased to 2
                } else
                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:409:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (ib_read(ip) == EOF) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:410:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (line) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:419:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (line) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:425:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((cp = memchr(ip->ib_cur, '\n',
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:434:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((nline = realloc(line, sz + 1)) == NULL) {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:438:7: note: +1, nesting level increased to 4
                                } else {
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:442:6: note: +1
                                        goto nextbuf;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:445:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((sz = cp - ip->ib_cur) > 0) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:448:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((nline = realloc(line, sz + 1)) == NULL) {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:451:7: note: +1, nesting level increased to 4
                                } else {
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:456:6: note: +1, nesting level increased to 3
                        } else
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:458:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (matchline(line, sz, 1, ip))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:468:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (!qflag && cflag) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:468:13: note: +1
        if (!qflag && cflag) {
                   ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:469:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (filename && !hflag)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:469:16: note: +1
                if (filename && !hflag)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:484:1: warning: function 'fngrep' has cognitive complexity of 76 (threshold 25) [readability-function-cognitive-complexity]
fngrep(const char *fn, int level)
^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:490:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (rflag && fn && (level ? rflag : stat)(fn, &st) == 0) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:490:18: note: +1
        if (rflag && fn && (level ? rflag : stat)(fn, &st) == 0) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:490:28: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (rflag && fn && (level ? rflag : stat)(fn, &st) == 0) {
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:491:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (rflag != lstat) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:492:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        for (i = 0; i < level; i++)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:493:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (st.st_dev == visited[i].v_dev &&
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:493:39: note: +1
                                if (st.st_dev == visited[i].v_dev &&
                                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:496:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (level >= vismax) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:504:8: note: +2, including nesting penalty of 1, nesting level increased to 2
        mode:   switch (st.st_mode&S_IFMT) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:521:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (stat(fn, &st) < 0 || (st.st_mode&S_IFMT) == S_IFDIR)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:521:26: note: +1
                        if (stat(fn, &st) < 0 || (st.st_mode&S_IFMT) == S_IFDIR)
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:523:4: note: +1
                        goto mode;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:532:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (hflag == 2)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:534:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((df = opendir(fn)) == NULL) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:535:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (sflag == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:539:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (!qflag || status == 1)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:539:16: note: +1
                                if (!qflag || status == 1)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:547:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        while ((dp = readdir(df)) != NULL) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:548:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (dp->d_name[0] == '.' &&
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:548:30: note: +1
                                if (dp->d_name[0] == '.' &&
                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:549:30: note: +1
                                                (dp->d_name[1] == '\0' ||
                                                                       ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:550:29: note: +1
                                                dp->d_name[1] == '.' &&
                                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:554:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:555:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (pend + i >= psize)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:569:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (fn) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:570:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((ip = ib_open(fn, 0)) == NULL) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:571:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (sflag == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:574:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!qflag || status == 1)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:574:15: note: +1
                        if (!qflag || status == 1)
                                   ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:578:4: note: +1, nesting level increased to 1
        } else
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:581:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (ip->ib_fd) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:583:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (zflag && ip->ib_pid) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:583:13: note: +1
                if (zflag && ip->ib_pid) {
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:586:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (s)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:589:4: note: +1, nesting level increased to 1
        } else
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:509:3: warning: switch has 2 consecutive identical branches [bugprone-branch-clone]
                case S_IFBLK:
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:514:10: note: last of these clones ends here
                        return;
                              ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:543:11: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                        pend = strlen(fn);
                               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:570:13: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                if ((ip = ib_open(fn, 0)) == NULL) {
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:579:8: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                ip = ib_alloc(0, 0);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:594:1: warning: function 'main' has cognitive complexity of 49 (threshold 25) [readability-function-cognitive-complexity]
main(int argc, char **argv)
^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:607:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        while ((i = getopt(argc, argv, options)) != EOF) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:608:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (i) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:614:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (Eflag&2)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:672:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!(Fflag&2))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:677:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (sus) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:678:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (Fflag == 2) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:679:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (sflag) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:685:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (qflag) {
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:692:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (Fflag && status == 2)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:692:13: note: +1
                if (Fflag && status == 2)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:694:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (Eflag == 1 && Fflag == 1 || cflag + lflag + qflag > 1)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:694:32: note: +1
                if (Eflag == 1 && Fflag == 1 || cflag + lflag + qflag > 1)
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:694:18: note: +1
                if (Eflag == 1 && Fflag == 1 || cflag + lflag + qflag > 1)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:696:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wflag && (Eflag || Fflag))
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:696:13: note: +1
                if (wflag && (Eflag || Fflag))
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:696:23: note: +1
                if (wflag && (Eflag || Fflag))
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:699:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (cflag)
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:701:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (hadpat == 0) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:702:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (optind >= argc)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:705:9: note: +1, nesting level increased to 1
        } else if (e0 == NULL)
               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:708:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (optind != argc) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:709:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (optind + 1 == argc)
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:711:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                do {
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:712:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (sus && argv[optind][0] == '-' &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:712:38: note: +1
                        if (sus && argv[optind][0] == '-' &&
                                                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:716:6: note: +1, nesting level increased to 3
                        } else {
                          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:721:4: note: +1, nesting level increased to 1
        } else {
          ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:722:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lflag && !sus && (Eflag || Fflag))
                ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:722:21: note: +1
                if (lflag && !sus && (Eflag || Fflag))
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:722:31: note: +1
                if (lflag && !sus && (Eflag || Fflag))
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/grep.c:682:5: warning: the value returned by this function should be used [bugprone-unused-return-value]
                                getopt(argc, argv, "");
                                ^~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.c:682:5: note: cast the expression to void to silence this warning
/home/sj/1/refactoring-heirloom-grep/before/grep.c:688:5: warning: the value returned by this function should be used [bugprone-unused-return-value]
                                getopt(argc, argv, "");
                                ^~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.c:688:5: note: cast the expression to void to silence this warning
/home/sj/1/refactoring-heirloom-grep/before/grep.c:726:9: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return status;
               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.h:33:10: error: 'iblok.h' file not found [clang-diagnostic-error]
#include        "iblok.h"
                ^~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.h:70:13: warning: invalid case style for variable 'Eflag' [readability-identifier-naming]
extern int              Eflag;          /* use EREs */
                        ^~~~~
                        eflag
/home/sj/1/refactoring-heirloom-grep/before/grep.h:71:13: warning: invalid case style for variable 'Fflag' [readability-identifier-naming]
extern int              Fflag;          /* use fixed strings */
                        ^~~~~
                        fflag
