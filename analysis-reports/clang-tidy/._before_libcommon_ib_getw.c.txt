/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:30:1: warning: function 'ib_getw' has cognitive complexity of 26 (threshold 25) [readability-function-cognitive-complexity]
ib_getw(struct iblok *ip, wint_t *wc, int *len)
^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:37:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (rest && ip->ib_mcur > ip->ib_mbuf) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:37:11: note: +1
        if (rest && ip->ib_mcur > ip->ib_mbuf) {
                 ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:38:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                do
                ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:41:9: note: +1, nesting level increased to 1
        } else if (ip->ib_incompl) {
               ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:47:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (i == 0) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:48:7: note: +2, including nesting penalty of 1, nesting level increased to 2
                c = ib_get(ip);
                    ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/iblok.h:94:49: note: expanded from macro 'ib_get'
#define ib_get(ip)      ((ip)->ib_cur < (ip)->ib_end ? *(ip)->ib_cur++ & 0377 :\
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:49:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (c == EOF) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:56:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (ip->ib_mbuf[0] & 0200) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:57:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (ip->ib_mbuf[i-1] != '\n' && i < ip->ib_mb_cur_max &&
                ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:57:60: note: +1
                while (ip->ib_mbuf[i-1] != '\n' && i < ip->ib_mb_cur_max &&
                                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:59:8: note: +3, including nesting penalty of 2, nesting level increased to 3
                        c = ib_get(ip);
                            ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/iblok.h:94:49: note: expanded from macro 'ib_get'
#define ib_get(ip)      ((ip)->ib_cur < (ip)->ib_end ? *(ip)->ib_cur++ & 0377 :\
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:60:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (c != EOF)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:62:4: note: +1, nesting level increased to 3
                        else
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:66:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (n < 0) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:69:10: note: +1, nesting level increased to 2
                } else if (n == 0) {
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:72:5: note: +1, nesting level increased to 2
                } else
                  ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:74:4: note: +1, nesting level increased to 1
        } else {
          ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:75:9: warning: 'signed char' to 'wint_t' (aka 'unsigned int') conversion; consider casting to 'unsigned char' first. [bugprone-signed-char-misuse]
                *wc = ip->ib_mbuf[0];
                      ^
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:76:10: warning: Although the value stored to 'n' is used in the enclosing expression, the value is never actually read from 'n' [clang-analyzer-deadcode.DeadStores]
                *len = n = 1;
                       ^   ~
/home/sj/1/refactoring-heirloom-grep/before/libcommon/ib_getw.c:76:10: note: Although the value stored to 'n' is used in the enclosing expression, the value is never actually read from 'n'
                *len = n = 1;
                       ^   ~
