/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:83:1: warning: function 'addrange' has cognitive complexity of 33 (threshold 25) [readability-function-cognitive-complexity]
addrange(Bracket *bp, wchar_t ord, w_type prev)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:87:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev > 0 && prev != ord) /* try for range */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:87:15: note: +1
        if (prev > 0 && prev != ord) /* try for range */
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:89:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (prev > ord)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:91:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (bp->flags & BKT_ODDRANGE)   /* prev only - done */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:93:9: note: +1, nesting level increased to 3
                        else if ((bp->flags & BKT_BADRANGE) == 0)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:96:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:98:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++prev <= UCHAR_MAX) /* "prev" already there */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:100:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:103:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (prev == ord)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:107:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((ret = addwide(bp, prev)) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:109:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++prev > ord)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:111:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (prev < ord && (ret = addwide(bp, RANGE)) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:111:19: note: +1
                        if (prev < ord && (ret = addwide(bp, RANGE)) != 0)
                                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:116:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (ord <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:121:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev == ord) /* don't bother */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:32: warning: 2 adjacent parameters of 'place' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:39: note: the first parameter in the range is 'prev'
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                                      ^~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:49: note: the last parameter in the range is 'mb_cur_max'
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                                                ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:32: note: after resolving type aliases, 'w_type' and 'int' are the same
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:133:55: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if ((cep = libuxre_collelem(bp->col, &spare, wc)) != ELEM_ENCODED)
                                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:136:11: error: use of undeclared identifier 'REG_EBKTCHAR' [clang-diagnostic-error]
                        return BKT_BADCHAR;
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:88:23: note: expanded from macro 'BKT_BADCHAR'
#define BKT_BADCHAR     (-REG_EBKTCHAR)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:137:8: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'wchar_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                wc = cep->weight[0];
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:204:1: warning: function 'mcce' has cognitive complexity of 83 (threshold 25) [readability-function-cognitive-complexity]
mcce(Mcce *mcp, const CollElem *cep, const unsigned char *s, int mb_cur_max,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:215:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wc = mcp->ch) != '\0')
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:219:7: note: +1, nesting level increased to 1
        else if (ISONEBYTE(wc = *s++))
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:219:11: note: +1
        else if (ISONEBYTE(wc = *s++))
                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:221:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '\0')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:224:7: note: +1, nesting level increased to 1
        else if ((i = libuxre_mb2wc(&wc, s)) > 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:227:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (mcp->max != 0 && s > mcp->max)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:227:21: note: +1
                if (mcp->max != 0 && s > mcp->max)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:230:2: note: +1, nesting level increased to 1
        else if (i < 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:238:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcp->bp->flags & BKT_ONECASE)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = to_lower(wc)) == ch)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: nesting level increased to 3
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +4, including nesting penalty of 3, nesting level increased to 4
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +5, including nesting penalty of 4, nesting level increased to 5
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +6, including nesting penalty of 5, nesting level increased to 6
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1, nesting level increased to 5
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1, nesting level increased to 4
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +3, including nesting penalty of 2, nesting level increased to 3
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: nesting level increased to 4
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +5, including nesting penalty of 4, nesting level increased to 5
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +6, including nesting penalty of 5, nesting level increased to 6
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +7, including nesting penalty of 6, nesting level increased to 7
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1, nesting level increased to 6
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1, nesting level increased to 5
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:243:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;) /* at most twice */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:245:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (cep == ELEM_BADCHAR) /* first character */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:247:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((nxt = libuxre_collelem(mcp->col, &spare, wc))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:250:5: note: +1
                                || s == mcp->max)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:258:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:262:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (nxt != ELEM_BADCHAR)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:273:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (nxt->weight[0] != WGHT_IGNORE
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:274:5: note: +1
                                && (mcp->aft < s || mcp->cep == ELEM_BADCHAR))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:274:22: note: +1
                                && (mcp->aft < s || mcp->cep == ELEM_BADCHAR))
                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:280:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (nxt->multbeg != 0
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:281:5: note: +1
                                && (mcp->max == 0 || s < mcp->max))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:281:23: note: +1
                                && (mcp->max == 0 || s < mcp->max))
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:283:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((i = mcce(mcp, nxt, s, mb_cur_max,
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:288:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == ch)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:231:10: error: use of undeclared identifier 'REG_ILLSEQ' [clang-diagnostic-error]
                return BKT_ILLSEQ;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:94:22: note: expanded from macro 'BKT_ILLSEQ'
#define BKT_ILLSEQ      (-REG_ILLSEQ)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:248:8: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                                == ELEM_ENCODED
                                   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:1: warning: function 'eqcls' has cognitive complexity of 30 (threshold 25) [readability-function-cognitive-complexity]
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:308:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((err = mcce(&mcbuf, ELEM_BADCHAR, s, mb_cur_max, 1)) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:32: note: +1
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:328:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((cep = libuxre_collmult(bp->col, mcbuf.cep, 0))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:330:4: note: +1
                        && cep->weight[1] != WGHT_IGNORE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:333:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (cep->subnbeg == SUBN_SPECIAL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:341:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (prev > 0 && prev != cep->weight[0]
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:342:6: note: +1
                                        && (prev = addrange(bp,
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:351:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((nq = bp->nquiv) < NQUIV)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:353:5: note: +1, nesting level increased to 4
                                else
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:355:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (nq % NQUIV == 0 && (bp->exquiv = 
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:355:26: note: +1
                                        if (nq % NQUIV == 0 && (bp->exquiv = 
                                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:383:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev <= 0 && (prev = mcbuf.wc - 1) <= 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:383:16: note: +1
        if (prev <= 0 && (prev = mcbuf.wc - 1) <= 0)
                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:385:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((prev = addrange(bp, mcbuf.wc, 0)) != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:388:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((mcbuf.wc = addrange(bp, last, prev)) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:44: warning: 3 adjacent parameters of 'eqcls' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:48: note: the first parameter in the range is 'n'
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:68: note: the last parameter in the range is 'mb_cur_max'
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                                                   ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:44: note: after resolving type aliases, 'int' and 'w_type' are the same
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:311:10: error: use of undeclared identifier 'REG_EEQUIV' [clang-diagnostic-error]
                return BKT_EEQUIV;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:87:22: note: expanded from macro 'BKT_EEQUIV'
#define BKT_EEQUIV      (-REG_EEQUIV)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:327:10: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                last = mcbuf.cep->weight[0];
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:332:11: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                        last = cep->weight[1];
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:343:7: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'wchar_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                                cep->weight[0], prev)) != 0)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:370:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:44: warning: 3 adjacent parameters of 'clsym' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:48: note: the first parameter in the range is 'n'
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:68: note: the last parameter in the range is 'mb_cur_max'
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                                                   ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:44: note: after resolving type aliases, 'int' and 'w_type' are the same
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:409:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:410:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:426:1: warning: function 'libuxre_bktmbcomp' has cognitive complexity of 170 (threshold 25) [readability-function-cognitive-complexity]
libuxre_bktmbcomp(Bracket *bp, const unsigned char *pat0,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:448:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wc = *pat) == ']' && (flags & BKT_EMPTY) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:448:25: note: +1
        if ((wc = *pat) == ']' && (flags & BKT_EMPTY) != 0)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:453:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;; prev = n)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:455:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (wc)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:460:4: note: +1
                        goto err;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:462:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (flags & BKT_NLBAD)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:464:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:466:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (flags & BKT_SLASHBAD)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:468:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:470:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((flags & (BKT_ESCAPE | BKT_QUOTE
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:473:5: note: +1
                                goto regular;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:475:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        switch (wc = *++pat)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:479:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCAPE) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:489:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_QUOTE) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:493:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:493:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:499:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:504:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:509:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & (BKT_ESCSEQ | BKT_ESCNL)) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:514:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:519:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:524:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:524:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:530:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:530:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:533:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (!isxdigit(wc = *++pat))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:536:6: note: +1
                                        goto noesc;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:544:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:546:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (isdigit(wc))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:548:11: note: +1, nesting level increased to 5
                                        else if (isupper(wc))
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:550:6: note: +1, nesting level increased to 5
                                        else
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:556:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = n) <= 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:559:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:572:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:572:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:580:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = *++pat) >= '0' && wc <= '9')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:580:30: note: +1
                                if ((wc = *++pat) >= '0' && wc <= '9')
                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:584:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((wc = *++pat) >= '0' && wc <= '9')
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:584:31: note: +1
                                        if ((wc = *++pat) >= '0' && wc <= '9')
                                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:591:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = n) <= 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:594:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:598:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:57: note: +1
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                                                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:43: note: +1
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:604:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                while (*++pat != wc || pat[1] != ']')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:604:25: note: +1
                                while (*++pat != wc || pat[1] != ']')
                                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:606:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (*pat == '\0')
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:610:7: note: +1
                                                goto err;
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:612:11: note: +1, nesting level increased to 5
                                        else if (*pat == '/')
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:614:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if (flags & BKT_SLASHBAD)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:617:11: note: +1, nesting level increased to 5
                                        else if (*pat == '\n')
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:619:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if (flags & BKT_NLBAD)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:624:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (n == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:627:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:629:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (wc == ':')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:631:10: note: +1, nesting level increased to 4
                                else if (wc == '=')
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:634:5: note: +1, nesting level increased to 4
                                else /* wc == '.' */
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:642:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!ISONEBYTE(wc) &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:23: note: +1
                        if (!ISONEBYTE(wc) &&
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:9: note: +1
                        if (!ISONEBYTE(wc) &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:651:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (n < 0) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:653:4: note: +1
                        goto err;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:655:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = *++pat) == ']')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:657:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '-' && n != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:657:17: note: +1
                if (wc == '-' && n != 0)
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:659:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (prev == 0 || (flags & BKT_SEPRANGE) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:659:18: note: +1
                        if (prev == 0 || (flags & BKT_SEPRANGE) == 0)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:661:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = *++pat) != ']')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:3: warning: 2 adjacent parameters of 'libuxre_bktmbcomp' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
                int flags, int mb_cur_max)
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:7: note: the first parameter in the range is 'flags'
                int flags, int mb_cur_max)
                    ^~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:18: note: the last parameter in the range is 'mb_cur_max'
                int flags, int mb_cur_max)
                               ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:558:10: error: use of undeclared identifier 'REG_BADESC' [clang-diagnostic-error]
                                        n = BKT_BADESC;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:93:22: note: expanded from macro 'BKT_BADESC'
#define BKT_BADESC      (-REG_BADESC)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:593:10: error: use of undeclared identifier 'REG_BADESC' [clang-diagnostic-error]
                                        n = BKT_BADESC;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:93:22: note: expanded from macro 'BKT_BADESC'
#define BKT_BADESC      (-REG_BADESC)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:626:10: error: use of undeclared identifier 'REG_EMPTYSUBBKT' [clang-diagnostic-error]
                                        n = BKT_EMPTYSUBBKT;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:90:27: note: expanded from macro 'BKT_EMPTYSUBBKT'
#define BKT_EMPTYSUBBKT (-REG_EMPTYSUBBKT)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:652:8: error: use of undeclared identifier 'REG_ILLSEQ' [clang-diagnostic-error]
                        n = BKT_ILLSEQ;
                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:94:22: note: expanded from macro 'BKT_ILLSEQ'
#define BKT_ILLSEQ      (-REG_ILLSEQ)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:669:9: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return pat - pat0 + 1;
               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:687:1: warning: function 'libuxre_bktmbexec' has cognitive complexity of 188 (threshold 25) [readability-function-cognitive-complexity]
libuxre_bktmbexec(Bracket *bp, wchar_t wc,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:701:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((i = bp->ntype) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:705:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (bp->flags & BKT_ONECASE)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: nesting level increased to 4
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +5, including nesting penalty of 4, nesting level increased to 5
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +6, including nesting penalty of 5, nesting level increased to 6
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +7, including nesting penalty of 6, nesting level increased to 7
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1, nesting level increased to 6
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1, nesting level increased to 5
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +4, including nesting penalty of 3, nesting level increased to 4
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: nesting level increased to 5
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +6, including nesting penalty of 5, nesting level increased to 6
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +7, including nesting penalty of 6, nesting level increased to 7
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +8, including nesting penalty of 7, nesting level increased to 8
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1, nesting level increased to 7
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1, nesting level increased to 6
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:710:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:712:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (iswctype(mb_cur_max==1?btowc(wc):wc, *wctp))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:712:30: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (iswctype(mb_cur_max==1?btowc(wc):wc, *wctp))
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:714:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc != mcbuf.ch &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:714:23: note: +1
                        if (wc != mcbuf.ch &&
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:715:30: note: +3, including nesting penalty of 2, nesting level increased to 3
                            iswctype(mb_cur_max==1?btowc(mcbuf.ch):mcbuf.ch,
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:718:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:720:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wctp == &bp->type[NTYPE])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:734:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep == ELEM_BADCHAR)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:736:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep != ELEM_ENCODED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:743:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_ONECASE)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +2, including nesting penalty of 1, nesting level increased to 2
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: nesting level increased to 3
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +4, including nesting penalty of 3, nesting level increased to 4
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +5, including nesting penalty of 4, nesting level increased to 5
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +6, including nesting penalty of 5, nesting level increased to 6
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1, nesting level increased to 5
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1, nesting level increased to 4
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +2, including nesting penalty of 1, nesting level increased to 2
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: nesting level increased to 3
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +4, including nesting penalty of 3, nesting level increased to 4
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +5, including nesting penalty of 4, nesting level increased to 5
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +6, including nesting penalty of 5, nesting level increased to 6
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1, nesting level increased to 5
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1, nesting level increased to 4
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:748:2: note: +1, nesting level increased to 1
        else
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:754:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.wc <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:756:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (bp->byte[PLIND(lc)] & PLBIT(lc))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:758:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lc != uc && (bp->byte[PLIND(uc)] & PLBIT(uc)))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:758:16: note: +1
                if (lc != uc && (bp->byte[PLIND(uc)] & PLBIT(uc)))
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:761:7: note: +1, nesting level increased to 1
        else if ((i = bp->nwide) != 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:766:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:768:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lcmp = lc - *wcp) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:771:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lc != uc && ucmp == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:771:17: note: +1
                        if (lc != uc && ucmp == 0)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:773:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:775:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wcp == &bp->wide[NWIDE])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:777:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (*wcp == RANGE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:779:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++wcp == &bp->wide[NWIDE])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:781:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lcmp > 0 && lc <= *wcp)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:781:18: note: +1
                                if (lcmp > 0 && lc <= *wcp)
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:783:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lc != uc && ucmp > 0 && uc < *wcp)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:783:30: note: +1
                                if (lc != uc && ucmp > 0 && uc < *wcp)
                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:785:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((i -= 2) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:787:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++wcp == &bp->wide[NWIDE])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:27: note: +1
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:802:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:804:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (mcbuf.wc == *wucp)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:806:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:808:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wucp == &bp->quiv[NQUIV])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:816:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_NEGATED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:818:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc != '\n' || (bp->flags & BKT_NOTNL) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:818:18: note: +1
                if (wc != '\n' || (bp->flags & BKT_NOTNL) == 0)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:826:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_NEGATED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:736:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:737:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:43: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:801:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[1];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:819:11: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                        return mcbuf.aft - str;
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:828:9: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return mcbuf.aft - str;
               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:57:10: error: 'wcharm.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <wcharm.h>
         ^~~~~~~~~~
         "wcharm.h"
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:40:10: error: 'colldata.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <colldata.h>
         ^~~~~~~~~~~~
         "colldata.h"
