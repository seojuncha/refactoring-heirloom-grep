error: too many errors emitted, stopping now [clang-diagnostic-error]
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:36:1: warning: function 'libuxre_collelem' has cognitive complexity of 30 (threshold 25) [readability-function-cognitive-complexity]
libuxre_collelem(struct lc_collate *col, CollElem *spare, wchar_t wc)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:49:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (col == 0 || col->flags & CHF_ENCODED
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:50:3: note: +1
                || (tbl = (const char *)col->maintbl) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:54:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wuchar_type)wc <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:58:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (cep->weight[0] == WGHT_SPECIAL)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:62:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (col->flags & CHF_INDEXED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:64:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wuchar_type)wc >= col->nmain)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:66:3: note: +1
                goto indexed;
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:83:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        while (lo < hi)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:85:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((cur = (hi + lo) >> 1) < lo)   /* hi+lo overflowed */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:88:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((diff = wc - cmp->ch) < 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:90:8: note: +1, nesting level increased to 2
                else if (cmp->elem.subnbeg & SUBN_SPECIAL)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:92:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (diff > (long)(cmp->elem.subnbeg & ~SUBN_SPECIAL))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:94:4: note: +1, nesting level increased to 3
                        else /* create an entry from the sequence in spare */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:99:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                for (lo = 1; lo < col->nweight; lo++)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:103:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((w = cmp->elem.weight[lo])
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:113:8: note: +1, nesting level increased to 2
                else if (diff == 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:115:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:52:10: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                return ELEM_ENCODED;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:14: warning: result of multiplication in type 'unsigned int' is used as a pointer offset after an implicit widening conversion to type 'size_t' [bugprone-implicit-widening-of-multiplication-result]
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:18: note: make conversion explicit to silence this warning
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                               ^
                               (size_t)(              )
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:32:36: note: expanded from macro 'CCE'
#define CCE(p)  ((const CollElem *)(p))
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:18: note: perform multiplication in a wider type
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                               ^
                               (size_t)
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:32:36: note: expanded from macro 'CCE'
#define CCE(p)  ((const CollElem *)(p))
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:79:7: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        sz = col->elemsize + (sizeof(CollMult) - sizeof(CollElem));
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:2: warning: result of multiplication in type 'int' is used as a pointer offset after an implicit widening conversion to type 'ptrdiff_t' [bugprone-implicit-widening-of-multiplication-result]
        tbl += (1 + UCHAR_MAX) * col->elemsize;
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:9: note: make conversion explicit to silence this warning
        tbl += (1 + UCHAR_MAX) * col->elemsize;
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               (ptrdiff_t)(           )
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:9: note: perform multiplication in a wider type
        tbl += (1 + UCHAR_MAX) * col->elemsize;
               ^~~~~~~~~~~~~~
                (ptrdiff_t)
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:83:1: warning: function 'addrange' has cognitive complexity of 33 (threshold 25) [readability-function-cognitive-complexity]
addrange(Bracket *bp, wchar_t ord, w_type prev)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:87:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev > 0 && prev != ord) /* try for range */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:87:15: note: +1
        if (prev > 0 && prev != ord) /* try for range */
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:89:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (prev > ord)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:91:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (bp->flags & BKT_ODDRANGE)   /* prev only - done */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:93:9: note: +1, nesting level increased to 3
                        else if ((bp->flags & BKT_BADRANGE) == 0)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:96:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:98:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++prev <= UCHAR_MAX) /* "prev" already there */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:100:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:103:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (prev == ord)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:107:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((ret = addwide(bp, prev)) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:109:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++prev > ord)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:111:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (prev < ord && (ret = addwide(bp, RANGE)) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:111:19: note: +1
                        if (prev < ord && (ret = addwide(bp, RANGE)) != 0)
                                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:116:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (ord <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:121:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev == ord) /* don't bother */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:32: warning: 2 adjacent parameters of 'place' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:39: note: the first parameter in the range is 'prev'
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                                      ^~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:49: note: the last parameter in the range is 'mb_cur_max'
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                                                ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:127:32: note: after resolving type aliases, 'w_type' and 'int' are the same
place(Bracket *bp, wchar_t wc, w_type prev, int mb_cur_max)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:133:55: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if ((cep = libuxre_collelem(bp->col, &spare, wc)) != ELEM_ENCODED)
                                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:136:11: error: use of undeclared identifier 'REG_EBKTCHAR' [clang-diagnostic-error]
                        return BKT_BADCHAR;
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:88:23: note: expanded from macro 'BKT_BADCHAR'
#define BKT_BADCHAR     (-REG_EBKTCHAR)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:137:8: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'wchar_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                wc = cep->weight[0];
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:204:1: warning: function 'mcce' has cognitive complexity of 83 (threshold 25) [readability-function-cognitive-complexity]
mcce(Mcce *mcp, const CollElem *cep, const unsigned char *s, int mb_cur_max,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:215:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wc = mcp->ch) != '\0')
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:219:7: note: +1, nesting level increased to 1
        else if (ISONEBYTE(wc = *s++))
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:219:11: note: +1
        else if (ISONEBYTE(wc = *s++))
                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:221:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '\0')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:224:7: note: +1, nesting level increased to 1
        else if ((i = libuxre_mb2wc(&wc, s)) > 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:227:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (mcp->max != 0 && s > mcp->max)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:227:21: note: +1
                if (mcp->max != 0 && s > mcp->max)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:230:2: note: +1, nesting level increased to 1
        else if (i < 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:238:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcp->bp->flags & BKT_ONECASE)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = to_lower(wc)) == ch)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: nesting level increased to 3
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +4, including nesting penalty of 3, nesting level increased to 4
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +5, including nesting penalty of 4, nesting level increased to 5
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +6, including nesting penalty of 5, nesting level increased to 6
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1, nesting level increased to 5
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:240:13: note: +1, nesting level increased to 4
                if ((wc = to_lower(wc)) == ch)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +3, including nesting penalty of 2, nesting level increased to 3
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: nesting level increased to 4
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +5, including nesting penalty of 4, nesting level increased to 5
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +6, including nesting penalty of 5, nesting level increased to 6
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +7, including nesting penalty of 6, nesting level increased to 7
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1, nesting level increased to 6
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:241:9: note: +1, nesting level increased to 5
                        ch = to_upper(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:243:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;) /* at most twice */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:245:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (cep == ELEM_BADCHAR) /* first character */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:247:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((nxt = libuxre_collelem(mcp->col, &spare, wc))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:250:5: note: +1
                                || s == mcp->max)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:258:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:262:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (nxt != ELEM_BADCHAR)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:273:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (nxt->weight[0] != WGHT_IGNORE
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:274:5: note: +1
                                && (mcp->aft < s || mcp->cep == ELEM_BADCHAR))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:274:22: note: +1
                                && (mcp->aft < s || mcp->cep == ELEM_BADCHAR))
                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:280:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (nxt->multbeg != 0
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:281:5: note: +1
                                && (mcp->max == 0 || s < mcp->max))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:281:23: note: +1
                                && (mcp->max == 0 || s < mcp->max))
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:283:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((i = mcce(mcp, nxt, s, mb_cur_max,
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:288:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == ch)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:231:10: error: use of undeclared identifier 'REG_ILLSEQ' [clang-diagnostic-error]
                return BKT_ILLSEQ;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:94:22: note: expanded from macro 'BKT_ILLSEQ'
#define BKT_ILLSEQ      (-REG_ILLSEQ)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:248:8: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                                == ELEM_ENCODED
                                   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:1: warning: function 'eqcls' has cognitive complexity of 30 (threshold 25) [readability-function-cognitive-complexity]
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:308:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((err = mcce(&mcbuf, ELEM_BADCHAR, s, mb_cur_max, 1)) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:32: note: +1
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:328:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((cep = libuxre_collmult(bp->col, mcbuf.cep, 0))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:330:4: note: +1
                        && cep->weight[1] != WGHT_IGNORE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:333:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (cep->subnbeg == SUBN_SPECIAL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:341:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (prev > 0 && prev != cep->weight[0]
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:342:6: note: +1
                                        && (prev = addrange(bp,
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:351:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((nq = bp->nquiv) < NQUIV)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:353:5: note: +1, nesting level increased to 4
                                else
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:355:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (nq % NQUIV == 0 && (bp->exquiv = 
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:355:26: note: +1
                                        if (nq % NQUIV == 0 && (bp->exquiv = 
                                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:383:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (prev <= 0 && (prev = mcbuf.wc - 1) <= 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:383:16: note: +1
        if (prev <= 0 && (prev = mcbuf.wc - 1) <= 0)
                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:385:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((prev = addrange(bp, mcbuf.wc, 0)) != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:388:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((mcbuf.wc = addrange(bp, last, prev)) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:44: warning: 3 adjacent parameters of 'eqcls' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:48: note: the first parameter in the range is 'n'
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:68: note: the last parameter in the range is 'mb_cur_max'
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                                                   ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:296:44: note: after resolving type aliases, 'int' and 'w_type' are the same
eqcls(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:311:10: error: use of undeclared identifier 'REG_EEQUIV' [clang-diagnostic-error]
                return BKT_EEQUIV;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:87:22: note: expanded from macro 'BKT_EEQUIV'
#define BKT_EEQUIV      (-REG_EEQUIV)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:313:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED && mcbuf.col->nweight > 1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:327:10: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                last = mcbuf.cep->weight[0];
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:332:11: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                        last = cep->weight[1];
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:343:7: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'wchar_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                                cep->weight[0], prev)) != 0)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:370:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:44: warning: 3 adjacent parameters of 'clsym' of similar type are easily swapped by mistake [bugprone-easily-swappable-parameters]
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:48: note: the first parameter in the range is 'n'
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:68: note: the last parameter in the range is 'mb_cur_max'
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                                                   ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:394:44: note: after resolving type aliases, 'int' and 'w_type' are the same
clsym(Bracket *bp, const unsigned char *s, int n, w_type prev, int mb_cur_max)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:409:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:410:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:426:1: warning: function 'libuxre_bktmbcomp' has cognitive complexity of 170 (threshold 25) [readability-function-cognitive-complexity]
libuxre_bktmbcomp(Bracket *bp, const unsigned char *pat0,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:448:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wc = *pat) == ']' && (flags & BKT_EMPTY) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:448:25: note: +1
        if ((wc = *pat) == ']' && (flags & BKT_EMPTY) != 0)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:453:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;; prev = n)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:455:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (wc)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:460:4: note: +1
                        goto err;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:462:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (flags & BKT_NLBAD)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:464:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:466:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (flags & BKT_SLASHBAD)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:468:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:470:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((flags & (BKT_ESCAPE | BKT_QUOTE
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:473:5: note: +1
                                goto regular;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:475:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        switch (wc = *++pat)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:479:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCAPE) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:489:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_QUOTE) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:493:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:493:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:499:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:504:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:509:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & (BKT_ESCSEQ | BKT_ESCNL)) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:514:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:519:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:524:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:524:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:530:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:530:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:533:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (!isxdigit(wc = *++pat))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:536:6: note: +1
                                        goto noesc;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:544:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:546:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (isdigit(wc))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:548:11: note: +1, nesting level increased to 5
                                        else if (isupper(wc))
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:550:6: note: +1, nesting level increased to 5
                                        else
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:556:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = n) <= 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:559:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:572:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:572:35: note: +1
                                if ((flags & BKT_ESCSEQ) == 0 ||
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:580:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = *++pat) >= '0' && wc <= '9')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:580:30: note: +1
                                if ((wc = *++pat) >= '0' && wc <= '9')
                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:584:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((wc = *++pat) >= '0' && wc <= '9')
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:584:31: note: +1
                                        if ((wc = *++pat) >= '0' && wc <= '9')
                                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:591:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = n) <= 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:594:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:598:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:57: note: +1
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                                                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:600:43: note: +1
                        if (((wc = *++pat) == ':' || wc == '=' || wc == '.') &&
                                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:604:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                while (*++pat != wc || pat[1] != ']')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:604:25: note: +1
                                while (*++pat != wc || pat[1] != ']')
                                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:606:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (*pat == '\0')
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:610:7: note: +1
                                                goto err;
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:612:11: note: +1, nesting level increased to 5
                                        else if (*pat == '/')
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:614:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if (flags & BKT_SLASHBAD)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:617:11: note: +1, nesting level increased to 5
                                        else if (*pat == '\n')
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:619:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if (flags & BKT_NLBAD)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:624:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (n == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:627:6: note: +1
                                        goto err;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:629:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (wc == ':')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:631:10: note: +1, nesting level increased to 4
                                else if (wc == '=')
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:634:5: note: +1, nesting level increased to 4
                                else /* wc == '.' */
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:642:4: note: +1
                        goto regular;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!ISONEBYTE(wc) &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:23: note: +1
                        if (!ISONEBYTE(wc) &&
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:644:9: note: +1
                        if (!ISONEBYTE(wc) &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:651:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (n < 0) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:653:4: note: +1
                        goto err;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:655:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = *++pat) == ']')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:657:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '-' && n != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:657:17: note: +1
                if (wc == '-' && n != 0)
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:659:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (prev == 0 || (flags & BKT_SEPRANGE) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:659:18: note: +1
                        if (prev == 0 || (flags & BKT_SEPRANGE) == 0)
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:661:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = *++pat) != ']')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:3: warning: 2 adjacent parameters of 'libuxre_bktmbcomp' of similar type ('int') are easily swapped by mistake [bugprone-easily-swappable-parameters]
                int flags, int mb_cur_max)
                ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:7: note: the first parameter in the range is 'flags'
                int flags, int mb_cur_max)
                    ^~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:427:18: note: the last parameter in the range is 'mb_cur_max'
                int flags, int mb_cur_max)
                               ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:558:10: error: use of undeclared identifier 'REG_BADESC' [clang-diagnostic-error]
                                        n = BKT_BADESC;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:93:22: note: expanded from macro 'BKT_BADESC'
#define BKT_BADESC      (-REG_BADESC)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:593:10: error: use of undeclared identifier 'REG_BADESC' [clang-diagnostic-error]
                                        n = BKT_BADESC;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:93:22: note: expanded from macro 'BKT_BADESC'
#define BKT_BADESC      (-REG_BADESC)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:626:10: error: use of undeclared identifier 'REG_EMPTYSUBBKT' [clang-diagnostic-error]
                                        n = BKT_EMPTYSUBBKT;
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:90:27: note: expanded from macro 'BKT_EMPTYSUBBKT'
#define BKT_EMPTYSUBBKT (-REG_EMPTYSUBBKT)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:652:8: error: use of undeclared identifier 'REG_ILLSEQ' [clang-diagnostic-error]
                        n = BKT_ILLSEQ;
                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:94:22: note: expanded from macro 'BKT_ILLSEQ'
#define BKT_ILLSEQ      (-REG_ILLSEQ)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:669:9: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return pat - pat0 + 1;
               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:687:1: warning: function 'libuxre_bktmbexec' has cognitive complexity of 188 (threshold 25) [readability-function-cognitive-complexity]
libuxre_bktmbexec(Bracket *bp, wchar_t wc,
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:701:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((i = bp->ntype) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:705:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (bp->flags & BKT_ONECASE)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: nesting level increased to 4
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +5, including nesting penalty of 4, nesting level increased to 5
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +6, including nesting penalty of 5, nesting level increased to 6
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +7, including nesting penalty of 6, nesting level increased to 7
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1, nesting level increased to 6
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:707:14: note: +1, nesting level increased to 5
                        if ((wc = to_lower(wc)) == mcbuf.ch)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +4, including nesting penalty of 3, nesting level increased to 4
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: nesting level increased to 5
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +6, including nesting penalty of 5, nesting level increased to 6
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +7, including nesting penalty of 6, nesting level increased to 7
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +8, including nesting penalty of 7, nesting level increased to 8
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1, nesting level increased to 7
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:708:16: note: +1, nesting level increased to 6
                                mcbuf.ch = to_upper(wc);
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:710:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:712:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (iswctype(mb_cur_max==1?btowc(wc):wc, *wctp))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:712:30: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (iswctype(mb_cur_max==1?btowc(wc):wc, *wctp))
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:714:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc != mcbuf.ch &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:714:23: note: +1
                        if (wc != mcbuf.ch &&
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:715:30: note: +3, including nesting penalty of 2, nesting level increased to 3
                            iswctype(mb_cur_max==1?btowc(mcbuf.ch):mcbuf.ch,
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:718:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:720:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wctp == &bp->type[NTYPE])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:734:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep == ELEM_BADCHAR)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:736:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.cep != ELEM_ENCODED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:743:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_ONECASE)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +2, including nesting penalty of 1, nesting level increased to 2
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: nesting level increased to 3
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +4, including nesting penalty of 3, nesting level increased to 4
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +5, including nesting penalty of 4, nesting level increased to 5
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +6, including nesting penalty of 5, nesting level increased to 6
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1, nesting level increased to 5
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:745:8: note: +1, nesting level increased to 4
                lc = to_lower(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +2, including nesting penalty of 1, nesting level increased to 2
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: nesting level increased to 3
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +4, including nesting penalty of 3, nesting level increased to 4
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +5, including nesting penalty of 4, nesting level increased to 5
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +6, including nesting penalty of 5, nesting level increased to 6
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1, nesting level increased to 5
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:746:8: note: +1, nesting level increased to 4
                uc = to_upper(mcbuf.wc);
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:748:2: note: +1, nesting level increased to 1
        else
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:754:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mcbuf.wc <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:756:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (bp->byte[PLIND(lc)] & PLBIT(lc))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:758:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lc != uc && (bp->byte[PLIND(uc)] & PLBIT(uc)))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:758:16: note: +1
                if (lc != uc && (bp->byte[PLIND(uc)] & PLBIT(uc)))
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:761:7: note: +1, nesting level increased to 1
        else if ((i = bp->nwide) != 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:766:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:768:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lcmp = lc - *wcp) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:771:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lc != uc && ucmp == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:771:17: note: +1
                        if (lc != uc && ucmp == 0)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:773:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:775:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wcp == &bp->wide[NWIDE])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:777:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (*wcp == RANGE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:779:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++wcp == &bp->wide[NWIDE])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:781:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lcmp > 0 && lc <= *wcp)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:781:18: note: +1
                                if (lcmp > 0 && lc <= *wcp)
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:783:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lc != uc && ucmp > 0 && uc < *wcp)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:783:30: note: +1
                                if (lc != uc && ucmp > 0 && uc < *wcp)
                                                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:785:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((i -= 2) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:787:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++wcp == &bp->wide[NWIDE])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:27: note: +1
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:802:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:804:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (mcbuf.wc == *wucp)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:806:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (--i == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:808:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (++wucp == &bp->quiv[NQUIV])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:816:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_NEGATED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:818:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc != '\n' || (bp->flags & BKT_NOTNL) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:818:18: note: +1
                if (wc != '\n' || (bp->flags & BKT_NOTNL) == 0)
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:826:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (bp->flags & BKT_NEGATED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:736:19: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if (mcbuf.cep != ELEM_ENCODED)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:737:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[0];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:797:43: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if ((i = bp->nquiv) != 0 && mcbuf.cep != ELEM_ENCODED)
                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:801:14: warning: narrowing conversion from 'wuchar_type' (aka 'unsigned int') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                mcbuf.wc = mcbuf.cep->weight[1];
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:819:11: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                        return mcbuf.aft - str;
                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/bracket.c:828:9: warning: narrowing conversion from 'long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return mcbuf.aft - str;
               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:57:10: error: 'wcharm.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <wcharm.h>
         ^~~~~~~~~~
         "wcharm.h"
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:30:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "_collelem.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:31:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "_collmult.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:32:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "stubs.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:33:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "bracket.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:34:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "regdfa.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:34:11: note: did you mean to include 'regdfa.h'?
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:35:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "regnfa.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:36:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "regparse.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:37:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "regcomp.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/onefile.c:38:11: warning: suspicious #include of file with '.c' extension [bugprone-suspicious-include]
#include "regexec.c"
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/re.h:40:10: error: 'colldata.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <colldata.h>
         ^~~~~~~~~~~~
         "colldata.h"
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:59:22: error: no member named 're_dfa' in 'struct re_pattern_buffer' [clang-diagnostic-error]
                np->left.pos = ep->re_dfa->nposn++;
                               ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:101:1: warning: function 'findposn' has cognitive complexity of 60 (threshold 25) [readability-function-cognitive-complexity]
findposn(regex_t *ep, Tree *tp, int mb_cur_max)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:107:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        switch (tp->op)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:110:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (ep->re_flags & REG_ICASE
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:4: note: +1
                        && (wc = to_upper(tp->op)) != tp->op)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +2, including nesting penalty of 1, nesting level increased to 2
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:38: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: nesting level increased to 3
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +4, including nesting penalty of 3, nesting level increased to 4
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +5, including nesting penalty of 4, nesting level increased to 5
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +6, including nesting penalty of 5, nesting level increased to 6
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +1
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +1, nesting level increased to 5
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:111:13: note: +1, nesting level increased to 4
                        && (wc = to_upper(tp->op)) != tp->op)
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:59:55: note: expanded from macro 'to_upper'
#define to_upper(ch)    (mb_cur_max > 1 ? towupper(ch) : toupper(ch))
                                                         ^
/usr/include/ctype.h:221:22: note: expanded from macro 'toupper'
#  define toupper(c)    __tobody (c, toupper, *__ctype_toupper_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:113:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((ptr = libuxre_reg1tree(tp->op, 0)) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:120:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((tp->right.ptr = ptr) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:142:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->right.ptr = findposn(ep, tp->right.ptr,
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:150:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->left.ptr = findposn(ep, tp->left.ptr,
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:155:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->left.ptr = findposn(ep, tp->left.ptr,
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:200:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((ptr = copy(ep, tp->left.ptr)) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:205:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (lo == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:207:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->left.ptr = libuxre_reg1tree(ROP_QUEST, tp->left.ptr))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:212:2: note: +1, nesting level increased to 1
        else
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:214:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (hi == BRACE_INF || (hi -= lo) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:214:23: note: +1
                if (hi == BRACE_INF || (hi -= lo) == 0)
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:216:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (--lo != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:218:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((tp = libuxre_reg2tree(ROP_CAT, tp, copy(ep, ptr)))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:223:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (hi == BRACE_INF)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:225:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->right.ptr = libuxre_reg1tree(ROP_PLUS, tp->right.ptr))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:230:7: note: +1, nesting level increased to 1
        else if (hi != 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:232:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((tp->right.ptr = libuxre_reg1tree(ROP_QUEST, tp->right.ptr))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:237:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (--hi != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:239:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((tp = libuxre_reg2tree(ROP_CAT, tp, copy(ep, ptr)))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:110:11: error: no member named 're_flags' in 'struct re_pattern_buffer' [clang-diagnostic-error]
                if (ep->re_flags & REG_ICASE
                    ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:116:24: error: no member named 're_dfa' in 'struct re_pattern_buffer' [clang-diagnostic-error]
                        ptr->left.pos = ep->re_dfa->nposn++;
                                        ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:123:24: error: no member named 're_dfa' in 'struct re_pattern_buffer' [clang-diagnostic-error]
                        ptr->left.pos = ep->re_dfa->nposn++;
                                        ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:136:22: error: no member named 're_dfa' in 'struct re_pattern_buffer' [clang-diagnostic-error]
                tp->left.pos = ep->re_dfa->nposn++;
                               ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:438:10: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                return t + 1;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:460:17: warning: operator '<<' has lower precedence than '+'; '+' will be evaluated first [clang-diagnostic-shift-op-parentheses]
                i = dp->avail + n << 1;
                    ~~~~~~~~~~^~~ ~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:460:17: note: place parentheses around the '+' expression to silence this warning
                i = dp->avail + n << 1;
                              ^
                    (            )
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:482:10: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                return -t;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:483:9: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        return t;
               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:519:1: warning: function 'regtrans' has cognitive complexity of 42 (threshold 25) [readability-function-cognitive-complexity]
regtrans(Dfa *dp, int st, w_type wc, int mb_cur_max)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:527:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((n = dp->nsig[st]) == 0)    /* dead state */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:532:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        do
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:535:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (pp->op)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:538:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\0' && (dp->flags & REG_NOTEOL) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:538:19: note: +1
                        if (wc == '\0' && (dp->flags & REG_NOTEOL) == 0)
                                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:543:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (pp->op == wc)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:550:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\n')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:554:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc <= '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:558:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:569:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc > '\0' &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:569:18: note: +1
                        if (wc > '\0' &&
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:581:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                do
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:583:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (dp->posset[*sp] == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:593:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((i = dp->nset) != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:597:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (n = 0;; n++)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:599:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (*s++ != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:602:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (--i == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:607:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((nst = addstate(dp)) < 0) /* flushed cache */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:609:7: note: +1, nesting level increased to 1
        else if (nst > 0 && (wc & ~(long)(NCHAR - 1)) == 0)
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:609:19: note: +1
        else if (nst > 0 && (wc & ~(long)(NCHAR - 1)) == 0)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:639:6: error: no member named 're_dfa' in 'struct re_pattern_buffer' [clang-diagnostic-error]
        ep->re_dfa = dp;
        ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:694:11: error: no member named 're_flags' in 'struct re_pattern_buffer' [clang-diagnostic-error]
        if ((ep->re_flags & REG_NOSUB) == 0) /* leftmost() might be called */
             ~~  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:722:1: warning: function 'leftmost' has cognitive complexity of 62 (threshold 25) [readability-function-cognitive-complexity]
leftmost(Dfa *dp, Exec *xp)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:732:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (xp->flags & REG_NOTBOL)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:734:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (dp->acc[st] && (xp->flags & REG_NONEMPTY) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:736:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:738:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = *s++) == '\n')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:740:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (xp->flags & REG_NEWLINE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:743:8: note: +1, nesting level increased to 2
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:743:27: note: +1
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:743:13: note: +1
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:745:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc & ~(long)(NCHAR - 1)) != 0
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:746:4: note: +1
                        || (nst = dp->trans[st][wc]) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:748:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((nst=regtrans(dp, st, wc, mb_cur_max)) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:750:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == ROP_EOL) /* REG_NEWLINE only */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:752:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (dp->acc[nst - 1])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:754:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (end == 0 || end < s)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:754:19: note: +1
                                        if (end == 0 || end < s)
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:760:5: note: +1
                                goto newst;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:763:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((st = nst - 1) == 0) /* dead state */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:765:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (end != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:767:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = *beg++) == '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:769:9: note: +1, nesting level increased to 3
                        else if (!ISONEBYTE(wc) &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:769:28: note: +1
                        else if (!ISONEBYTE(wc) &&
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:769:14: note: +1
                        else if (!ISONEBYTE(wc) &&
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:774:4: note: +1
                        goto newst;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:776:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '\0')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:778:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (dp->acc[st])
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:781:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (end == 0 || end < s)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:781:18: note: +1
                                if (end == 0 || end < s)
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:785:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (end != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:790:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (dp->acc[st])
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:792:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (end == 0 || end < s)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:792:17: note: +1
                        if (end == 0 || end < s)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:734:34: error: use of undeclared identifier 'REG_NONEMPTY' [clang-diagnostic-error]
        if (dp->acc[st] && (xp->flags & REG_NONEMPTY) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:796:23: warning: narrowing conversion from 'long' to signed type 'regoff_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
        xp->match[0].rm_so = beg - xp->str;
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:797:23: warning: narrowing conversion from 'long' to signed type 'regoff_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
        xp->match[0].rm_eo = end - xp->str;
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:815:34: error: use of undeclared identifier 'REG_NONEMPTY' [clang-diagnostic-error]
        if (dp->acc[st] && (xp->flags & REG_NONEMPTY) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:831:1: warning: function 'libuxre_regdfaexec' has cognitive complexity of 35 (threshold 25) [readability-function-cognitive-complexity]
libuxre_regdfaexec(Dfa *dp, Exec *xp)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:839:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (xp->nmatch != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:841:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mb_cur_max == 1 && (xp->flags & REG_NEWLINE) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:841:22: note: +1
        if (mb_cur_max == 1 && (xp->flags & REG_NEWLINE) == 0)
                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:845:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (xp->flags & REG_NOTBOL)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:847:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (dp->acc[st] && (xp->flags & REG_NONEMPTY) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:849:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:851:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc = *s++) == '\n')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:853:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (xp->flags & REG_NEWLINE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:856:8: note: +1, nesting level increased to 2
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:856:27: note: +1
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:856:13: note: +1
                else if (!ISONEBYTE(wc) && (i = libuxre_mb2wc(&wc, s)) > 0)
                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:858:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc & ~(long)(NCHAR - 1)) != 0
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:859:4: note: +1
                        || (nst = dp->trans[st][wc]) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:861:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((nst=regtrans(dp, st, wc, mb_cur_max)) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:863:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == ROP_EOL) /* REG_NEWLINE only */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:865:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (dp->acc[nst - 1])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:867:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (dp->acc[st = dp->anybol])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:872:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (dp->acc[st = nst - 1])
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.c:874:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '\0') /* st == 0 */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regdfa.h:37:10: error: 're.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <re.h>
         ^~~~~~
         "re.h"
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:187:1: warning: function 'mkgraph' has cognitive complexity of 30 (threshold 25) [readability-function-cognitive-complexity]
mkgraph(Tree *tp, Graph **first, Graph **last)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:192:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (tp->op != ROP_CAT)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:194:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((new = malloc(sizeof(Graph))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:198:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        switch (tp->op)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:224:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((rmt = mkgraph(tp->right.ptr, &rf, &rl)) < 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:232:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lmt = mkgraph(tp->left.ptr, &lf, &ll)) < 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:242:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        switch (tp->op)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:245:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((nop = malloc(sizeof(Graph))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:262:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((nop = malloc(sizeof(Graph))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:277:17: note: +2, including nesting penalty of 1, nesting level increased to 2
                new->op = lmt ? ROP_MTOR : ROP_OR;
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:285:3: note: +1
                goto star;
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:287:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((nop = malloc(sizeof(Graph))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:294:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((new->alt.info.num[0] = tp->right.info.num[0]) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:299:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:302:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (new->alt.info.num[1] != BRACE_INF)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:309:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((nop = malloc(sizeof(Graph))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:321:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (KIND_ROP(tp->op) == BINARY_ROP && rf != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:321:37: note: +1
        if (KIND_ROP(tp->op) == BINARY_ROP && rf != 0)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:323:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (lf != 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:325:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (tp->op != ROP_CAT)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:1: warning: function 'casecmp' has cognitive complexity of 66 (threshold 25) [readability-function-cognitive-complexity]
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:610:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (strncmp((char *)s, (char *)p, n) == 0) /* try for exact match */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:612:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((xp->flags & REG_ICASE) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:620:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        do
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:622:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wc1 = *s++) == '\0')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:624:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (!ISONEBYTE(wc1) && (k = libuxre_mb2wc(&wc1, s)) > 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:624:23: note: +1
                if (!ISONEBYTE(wc1) && (k = libuxre_mb2wc(&wc1, s)) > 0)
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:624:8: note: +1
                if (!ISONEBYTE(wc1) && (k = libuxre_mb2wc(&wc1, s)) > 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:626:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (!ISONEBYTE(wc2 = *p++) && (k = libuxre_mb2wc(&wc2, p)) > 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:626:30: note: +1
                if (!ISONEBYTE(wc2 = *p++) && (k = libuxre_mb2wc(&wc2, p)) > 0)
                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:626:8: note: +1
                if (!ISONEBYTE(wc2 = *p++) && (k = libuxre_mb2wc(&wc2, p)) > 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:628:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc1 != wc2)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +3, including nesting penalty of 2, nesting level increased to 3
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: nesting level increased to 4
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +5, including nesting penalty of 4, nesting level increased to 5
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +6, including nesting penalty of 5, nesting level increased to 6
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +7, including nesting penalty of 6, nesting level increased to 7
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +1
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +1, nesting level increased to 6
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:630:10: note: +1, nesting level increased to 5
                        wc1 = to_lower(wc1);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +3, including nesting penalty of 2, nesting level increased to 3
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: nesting level increased to 4
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +5, including nesting penalty of 4, nesting level increased to 5
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +6, including nesting penalty of 5, nesting level increased to 6
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +7, including nesting penalty of 6, nesting level increased to 7
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +1
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +1, nesting level increased to 6
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:631:10: note: +1, nesting level increased to 5
                        wc2 = to_lower(wc2);
                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:632:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc1 != wc2)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:35: warning: 3 adjacent parameters of 'casecmp' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:43: note: the first parameter in the range is 'i'
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
                                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:61: note: the last parameter in the range is 'mb_cur_max'
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
                                                            ^~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:35: note: 
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:603:57: note: 'ssize_t' and 'int' may be implicitly converted: 'ssize_t' (as 'long') -> 'int', 'int' -> 'ssize_t' (as 'long')
casecmp(const Uchar *s, Exec *xp, ssize_t i, ssize_t n, int mb_cur_max)
                                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:640:1: warning: function 'libuxre_regnfaexec' has cognitive complexity of 315 (threshold 25) [readability-function-cognitive-complexity]
libuxre_regnfaexec(Nfa *np, Exec *xp)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:657:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((np->used = xp->nmatch) < np->rmmin)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:662:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (;;)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:670:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                for (;;)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:674:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!ISONEBYTE(wc = *s++) &&
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:674:30: note: +1
                        if (!ISONEBYTE(wc = *s++) &&
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:674:9: note: +1
                        if (!ISONEBYTE(wc = *s++) &&
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:677:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (np->cur != 0 || np->beg == wc || np->beg == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:677:38: note: +1
                        if (np->cur != 0 || np->beg == wc || np->beg == 0)
                                                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:679:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (np->beg == ROP_BOL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:681:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (s2 == 0 && (xp->flags & REG_NOTBOL) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:681:17: note: +1
                                if (s2 == 0 && (xp->flags & REG_NOTBOL) == 0)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:683:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((xp->flags & REG_NEWLINE) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:685:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (s2 != 0 && *s2 == '\n')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:685:17: note: +1
                                if (s2 != 0 && *s2 == '\n')
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:688:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:696:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (rmso < 0 && newctxt(np, 0, np->gp) != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:696:16: note: +1
                if (rmso < 0 && newctxt(np, 0, np->gp) != 0)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:708:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (gp->op)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:713:4: note: +1
                        goto mtor;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:717:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (cp->wasgp != gp) /* first time */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:719:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (mkstck(np, cp, gp) != 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:722:9: note: +1, nesting level increased to 3
                        else if (cp->str == s) /* spinning */
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:725:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (brace != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:727:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (cp->cnt >= brace->alt.info.num[1])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:729:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++cp->cnt <= brace->alt.info.num[0])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:732:6: note: +1
                                        goto again;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:734:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (cp->cnt > BRACE_MAX)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:737:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (newctxt(np, cp, gp->alt.ptr) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:741:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((sp = cp->sp) != 0) /* pop stack */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:754:4: note: +1
                        goto again;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:756:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (newctxt(np, cp, gp->alt.ptr) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:758:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:760:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = gp->alt.info.sub) < np->used)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:770:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((k = cp->nset) < n)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:774:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        for (;; rmp++)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:778:7: note: +6, including nesting penalty of 5, nesting level increased to 6
                                                if (++k >= n)
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:784:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:786:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = gp->alt.info.sub) < np->used)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:788:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:790:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (s2 == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:792:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (xp->flags & REG_NOTBOL)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:795:9: note: +1, nesting level increased to 3
                        else if ((xp->flags & REG_NEWLINE) == 0 || *s2 != '\n')
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:795:44: note: +1
                        else if ((xp->flags & REG_NEWLINE) == 0 || *s2 != '\n')
                                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:797:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:799:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:801:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (xp->flags & REG_NOTEOL)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:804:9: note: +1, nesting level increased to 3
                        else if ((xp->flags & REG_NEWLINE) == 0 || wc != '\n')
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:804:44: note: +1
                        else if ((xp->flags & REG_NEWLINE) == 0 || wc != '\n')
                                                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:806:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:808:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (gp->op != wc)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:810:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((xp->flags & REG_ICASE) == 0
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:6: note: +1
                                        || gp->op != to_lower(wc))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +4, including nesting penalty of 3, nesting level increased to 4
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: nesting level increased to 5
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +6, including nesting penalty of 5, nesting level increased to 6
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +7, including nesting penalty of 6, nesting level increased to 7
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +8, including nesting penalty of 7, nesting level increased to 8
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +1, nesting level increased to 7
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:811:19: note: +1, nesting level increased to 6
                                        || gp->op != to_lower(wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:813:6: note: +1
                                        goto failed;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:823:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((cp = cpn) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:825:4: note: +1
                        goto loop;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:827:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '\n')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:831:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc > '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:839:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((cp = cpn) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:841:4: note: +1
                        goto loop;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:843:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (s2 == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:845:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (xp->flags & REG_NOTBOL)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:848:4: note: +1, nesting level increased to 3
                        else
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:852:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (wc != '_' &&
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:852:19: note: +1
                                if (wc != '_' &&
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:853:35: note: +4, including nesting penalty of 3, nesting level increased to 4
                                    !iswalnum(mb_cur_max == 1 ? btowc(wc) : wc))
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:855:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (!ISONEBYTE(pwc = *s2))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:855:10: note: +1
                                if (!ISONEBYTE(pwc = *s2))
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:857:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (pwc == '_' ||
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:857:20: note: +1
                                if (pwc == '_' ||
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:858:33: note: +4, including nesting penalty of 3, nesting level increased to 4
                                    iswalnum(mb_cur_max== 1 ? btowc(pwc) : pwc))
                                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:861:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:863:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc == '_' ||
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:863:18: note: +1
                        if (wc == '_' ||
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:864:33: note: +3, including nesting penalty of 2, nesting level increased to 3
                            iswalnum(mb_cur_max == 1 ? btowc(wc) : wc))
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:866:4: note: +1
                        goto tonext;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:869:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (cp->wasgp == gp) /* rest of MCCE */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:872:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (s1 >= cp->str) /* got it all */
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:874:5: note: +1
                                goto tostep;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:876:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((i = libuxre_bktmbexec(gp->alt.info.bkt, wc, s,
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:879:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = i) == 0)       /* only matched wc */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:882:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (mkstck(np, cp, gp) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:886:4: note: +1
                        goto tostep;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:888:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (cp->wasgp == gp)    /* rest of matched string */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:890:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = gp->alt.info.sub) >= cp->nset)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:892:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((len = cp->rm[n].rm_eo) < 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:894:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((len -= n = cp->rm[n].rm_so) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:896:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (casecmp(s1, xp, n, len, mb_cur_max) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:898:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = s - s1) >= len)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:901:4: note: +1
                        goto spin;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:903:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (xp->flags & REG_NONEMPTY)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:905:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (s2 == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:908:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (xp->nmatch == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:913:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = cp->nset) < xp->nmatch)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:915:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:925:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (rmso < 0 || n < rmso)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:925:17: note: +1
                        if (rmso < 0 || n < rmso)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:931:5: note: +1
                                goto failed;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:933:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (rmso < n || xp->match[0].rm_eo > cp->rm[0].rm_eo)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:933:17: note: +1
                        if (rmso < n || xp->match[0].rm_eo > cp->rm[0].rm_eo)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:935:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (xp->match[0].rm_eo < cp->rm[0].rm_eo)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:978:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        for (n = 1; n < xp->nmatch; n++)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:983:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (xp->flags & REG_AVOIDNULL) {
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:998:27: note: +1
                                                        xp->match[n].rm_so ||
                                                                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1000:7: note: +1, nesting level increased to 4
                                } else
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1008:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (len < nlen && use)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1008:20: note: +1
                                if (len < nlen && use)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1010:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (len > nlen)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1018:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (len < nlen && use)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1018:20: note: +1
                                if (len < nlen && use)
                                               ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1020:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (len > nlen)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1024:4: note: +1
                        goto failed;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1033:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == '\0')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1035:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (rmso >= 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1037:4: note: +1
                        goto nomatch;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1040:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((np->cur = np->step) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1042:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (rmso >= 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1053:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (cp = np->allcp; cp != 0; cp = cpn)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1060:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        for (sp = np->allsp; sp != 0; sp = spn)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:1069:2: note: +1
        goto match;
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:764:23: warning: narrowing conversion from 'long' to signed type 'regoff_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                cp->rm[n].rm_so = s1 - xp->str;
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:787:23: warning: narrowing conversion from 'long' to signed type 'regoff_t' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                cp->rm[n].rm_eo = s1 - xp->str;
                                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:894:16: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'ssize_t' (aka 'long') is implementation-defined [bugprone-narrowing-conversions]
                        if ((len -= n = cp->rm[n].rm_so) == 0)
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:896:24: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'ssize_t' (aka 'long') is implementation-defined [bugprone-narrowing-conversions]
                        if (casecmp(s1, xp, n, len, mb_cur_max) == 0)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regnfa.c:927:12: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'ssize_t' (aka 'long') is implementation-defined [bugprone-narrowing-conversions]
                                rmso = n;
                                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:98:1: warning: function 'lex' has cognitive complexity of 396 (threshold 25) [readability-function-cognitive-complexity]
lex(Lex *lxp)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:105:8: note: +1, including nesting penalty of 0, nesting level increased to 1
nextc:  switch (wc = *lxp->pat++) /* interesting ones are single bytes */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:112:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_PARENS)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:123:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_NOBACKREF) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:125:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lxp->nleft >= lxp->nclist) /* grow it */
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:130:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((p = realloc(lxp->clist,
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:149:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_PARENS && lxp->nright < lxp->nleft)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:157:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_NOBACKREF) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:160:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                while (lxp->clist[--num] != 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:169:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_NEWLINE)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:173:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_ADDITIVE)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:175:11: note: +3, including nesting penalty of 2, nesting level increased to 3
        nxtstar:        switch (*lxp->pat)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:178:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((lxp->flags & REG_PLUS) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:181:5: note: +1
                                goto nxtstar;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:183:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((lxp->flags & REG_QUEST) == 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:188:5: note: +1
                                goto nxtstar;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:199:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_ANCHORS || lxp->tok == ROP_OR) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:200:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ADDITIVE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:204:12: note: +4, including nesting penalty of 3, nesting level increased to 4
                        nxtcar: switch (*lxp->pat)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:207:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_PLUS) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:210:6: note: +1
                                        goto nxtcar;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:212:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_QUEST) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:218:6: note: +1
                                        goto nxtcar;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:220:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (optional)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:233:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_ANCHORS || *lxp->pat == '\0'
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:237:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ADDITIVE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:241:12: note: +4, including nesting penalty of 3, nesting level increased to 4
                        nxtdol: switch (*lxp->pat)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:244:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_PLUS) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:247:6: note: +1
                                        goto nxtdol;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:249:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_QUEST) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:255:6: note: +1
                                        goto nxtdol;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:257:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (optional)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:264:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_PLUS)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:267:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ADDITIVE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:269:12: note: +4, including nesting penalty of 3, nesting level increased to 4
                nxtplus:        switch (*lxp->pat)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:272:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_QUEST) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:279:6: note: +1
                                        goto nxtplus;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:285:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_QUEST)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:288:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ADDITIVE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:290:13: note: +4, including nesting penalty of 3, nesting level increased to 4
                nxtquest:       switch (*lxp->pat)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:293:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((lxp->flags & REG_PLUS) == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:300:6: note: +1
                                        goto nxtquest;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:306:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_NLALT)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:313:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->nleft != lxp->nright)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:320:8: note: +1, nesting level increased to 2
                else if (lxp->flags & REG_NEWLINE)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:324:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_OR)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:328:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lxp->info.bkt = malloc(sizeof(Bracket))) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:333:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lxp->flags & REG_GOTBKT) == 0)     /* first time */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:339:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ICASE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:341:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_NEWLINE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:343:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_BADRANGE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:345:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ODDRANGE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:347:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_SEPRANGE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:349:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_BKTQUOTE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:351:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_BKTEMPTY)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:353:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCNL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:355:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_NLALT)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:357:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:359:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_BKTESCAPE)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:361:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_NOI18N)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:363:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_OLDESC)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:365:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((col = libuxre_lc_collate(0)) != 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:367:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (col->maintbl == 0
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:368:6: note: +1
                                        || col->flags & CHF_ENCODED)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:373:10: note: +1, nesting level increased to 4
                                else if (col->flags & CHF_MULTICH)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:379:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (*lxp->pat == '^')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:385:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((n = libuxre_bktmbcomp(lxp->info.bkt, lxp->pat,
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:395:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lxp->flags & (REG_NFA | REG_NEWLINE)) == REG_NEWLINE
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:397:4: note: +1
                        && libuxre_bktmbexec(lxp->info.bkt, '\n', 0, 1) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:405:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_NOBRACES || (lxp->flags & REG_BRACES) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:408:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (!isdigit(num = *lxp->pat))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:412:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (*lxp->pat == '\0')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:417:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                while (isdigit(wc = *++lxp->pat))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:420:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((num += wc - '0') > BRACE_MAX)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:425:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc == ',')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:428:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (isdigit(wc = *++lxp->pat))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:431:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                while (isdigit(wc = *++lxp->pat))
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:434:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((num += wc - '0') > BRACE_MAX)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:437:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (num < lxp->info.num[0])
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:442:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lxp->flags & REG_BRACES) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:444:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (wc != '\\')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:448:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (wc != '}')
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:456:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->info.num[1] <= 1)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:458:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->info.num[0] == 1)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:460:9: note: +1, nesting level increased to 3
                        else if (lxp->info.num[1] == 0)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:462:4: note: +1, nesting level increased to 3
                        else
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:465:8: note: +1, nesting level increased to 2
                else if (lxp->info.num[1] == BRACE_INF)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:467:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->info.num[0] == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:469:9: note: +1, nesting level increased to 3
                        else if (lxp->info.num[0] == 1)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:471:9: note: +1, nesting level increased to 3
                        else if (lxp->info.num[0] > BRACE_DFAMAX)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:474:8: note: +1, nesting level increased to 2
                else if (lxp->info.num[1] > BRACE_DFAMAX)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:480:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (wc = *lxp->pat++)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:486:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ANGLES)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:491:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:493:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ANGLES)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:498:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:500:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_PARENS) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:502:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:504:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_PARENS) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:506:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (++lxp->nright > lxp->nleft)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:511:5: note: +1
                                goto rightparen;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:513:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:515:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & (REG_BRACES|REG_NOBRACES))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:517:4: note: +1
                        goto interval;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:528:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_NOBACKREF) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:531:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (num > lxp->nleft
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:532:6: note: +1
                                        || lxp->clist[num - 1] == 0)
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:538:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lxp->maxref < num)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:542:5: note: +1
                                goto out;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:551:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_ESCSEQ) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:553:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = *lxp->pat) >= '0' && wc <= '9')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:553:32: note: +1
                        if ((wc = *lxp->pat) >= '0' && wc <= '9')
                                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:557:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = *++lxp->pat) >= '0' && wc <= '9')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:557:35: note: +1
                                if ((wc = *++lxp->pat) >= '0' && wc <= '9')
                                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:563:10: note: +1, nesting level increased to 4
                                else if (lxp->flags & REG_OLDESC)
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:567:6: note: +1
                                        goto out;
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:570:9: note: +1, nesting level increased to 3
                        else if (lxp->flags & REG_OLDESC)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:573:5: note: +1
                                goto out;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:575:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((wc = num) <= 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:580:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:582:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_NOBACKREF) == 0
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:591:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                while ((wc = *++lxp->pat) >= '0' && wc <= '9')
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:591:38: note: +1
                                while ((wc = *++lxp->pat) >= '0' && wc <= '9')
                                                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:597:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (num != 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:602:4: note: +1
                        goto tryoctal;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:604:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags&(REG_ESCSEQ|REG_OLDESC)) == REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:606:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:608:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:610:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:612:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:614:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:616:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & (REG_ESCSEQ | REG_ESCNL))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:619:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if (lxp->flags & REG_NEWLINE)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:622:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:624:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:626:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:628:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:630:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:632:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags&(REG_ESCSEQ|REG_OLDESC)) == REG_ESCSEQ)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:634:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:636:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags&(REG_ESCSEQ|REG_OLDESC)) == REG_ESCSEQ
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:647:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                do
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:649:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if (isdigit(wc))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:651:11: note: +1, nesting level increased to 5
                                        else if (isupper(wc))
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:653:6: note: +1, nesting level increased to 5
                                        else
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:658:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                if ((wc = num) <= 0)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:664:4: note: +1
                        goto out;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:668:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (!ISONEBYTE(wc))
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:668:8: note: +1
                if (!ISONEBYTE(wc))
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:56:43: note: expanded from macro 'ISONEBYTE'
#define ISONEBYTE(ch)   (((ch) & 0200) == 0 || mb_cur_max == 1)
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:670:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((n = libuxre_mb2wc(&wc, lxp->pat)) > 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:672:9: note: +1, nesting level increased to 3
                        else if (n < 0)
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:678:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->flags & REG_ICASE)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +3, including nesting penalty of 2, nesting level increased to 3
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:38: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: nesting level increased to 4
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +5, including nesting penalty of 4, nesting level increased to 5
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +6, including nesting penalty of 5, nesting level increased to 6
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +7, including nesting penalty of 6, nesting level increased to 7
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +1
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +1, nesting level increased to 6
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:679:9: note: +1, nesting level increased to 5
                        wc = to_lower(wc);
                             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/wcharm.h:58:55: note: expanded from macro 'to_lower'
#define to_lower(ch)    (mb_cur_max > 1 ? towlower(ch) : tolower(ch))
                                                         ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:575:14: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                        if ((wc = num) <= 0)
                                  ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:639:10: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                wc = num;
                                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:658:15: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'w_type' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
                                if ((wc = num) <= 0)
                                          ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:690:1: warning: function 'leaf' has cognitive complexity of 41 (threshold 25) [readability-function-cognitive-complexity]
leaf(Lex *lxp)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:694:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((tp = malloc(sizeof(Tree))) == 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:699:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        switch (tp->op = lxp->tok) /* covers most cases */
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:702:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (tp->op < 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:706:4: note: +1
                        goto badunary;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:712:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((lxp->flags & REG_NOAUTOQUOTE) == 0
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:725:3: note: +1
                goto err;
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:737:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lex(lxp) != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:739:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                switch (lxp->tok)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:744:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((lxp->flags & REG_NOAUTOQUOTE) == 0
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:755:4: note: +1
                        goto err;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:766:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lex(lxp) != 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:768:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lxp->tok == ROP_RP) /* empty parens; choice of meaning */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:770:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_MTPARENBAD)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:773:5: note: +1
                                goto badunary;
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:776:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->flags & REG_MTPARENFAIL)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:778:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if ((tp->left.ptr = libuxre_reg1tree(lxp->tok, 0)) == 0)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:781:8: note: +1, nesting level increased to 2
                else if ((tp->left.ptr = alt(lxp)) == 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:783:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->err == REG_BADPAT)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:785:4: note: +1
                        goto badunary;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:787:8: note: +1, nesting level increased to 2
                else if (lxp->tok != ROP_RP)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:791:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (lxp->nleft != lxp->nright)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:793:4: note: +1
                        goto badunary;
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/regparse.c:798:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (lex(lxp) != 0)
        ^
