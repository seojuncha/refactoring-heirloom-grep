/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:36:1: warning: function 'libuxre_collelem' has cognitive complexity of 30 (threshold 25) [readability-function-cognitive-complexity]
libuxre_collelem(struct lc_collate *col, CollElem *spare, wchar_t wc)
^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:49:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (col == 0 || col->flags & CHF_ENCODED
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:50:3: note: +1
                || (tbl = (const char *)col->maintbl) == 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:54:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((wuchar_type)wc <= UCHAR_MAX)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:58:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (cep->weight[0] == WGHT_SPECIAL)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:62:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (col->flags & CHF_INDEXED)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:64:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((wuchar_type)wc >= col->nmain)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:66:3: note: +1
                goto indexed;
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:83:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        while (lo < hi)
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:85:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((cur = (hi + lo) >> 1) < lo)   /* hi+lo overflowed */
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:88:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((diff = wc - cmp->ch) < 0)
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:90:8: note: +1, nesting level increased to 2
                else if (cmp->elem.subnbeg & SUBN_SPECIAL)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:92:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (diff > (long)(cmp->elem.subnbeg & ~SUBN_SPECIAL))
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:94:4: note: +1, nesting level increased to 3
                        else /* create an entry from the sequence in spare */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:99:5: note: +4, including nesting penalty of 3, nesting level increased to 4
                                for (lo = 1; lo < col->nweight; lo++)
                                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:103:6: note: +5, including nesting penalty of 4, nesting level increased to 5
                                        if ((w = cmp->elem.weight[lo])
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:113:8: note: +1, nesting level increased to 2
                else if (diff == 0)
                     ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:115:3: note: +1, nesting level increased to 2
                else
                ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:52:10: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
                return ELEM_ENCODED;
                       ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:205:23: note: expanded from macro 'ELEM_ENCODED'
#define ELEM_ENCODED    ((CollElem *)-1)
                         ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:14: warning: result of multiplication in type 'unsigned int' is used as a pointer offset after an implicit widening conversion to type 'size_t' [bugprone-implicit-widening-of-multiplication-result]
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                           ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:18: note: make conversion explicit to silence this warning
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                               ^
                               (size_t)(              )
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:32:36: note: expanded from macro 'CCE'
#define CCE(p)  ((const CollElem *)(p))
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:57:18: note: perform multiplication in a wider type
                cep = CCE(&tbl[(wuchar_type)wc * col->elemsize]);
                               ^
                               (size_t)
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:32:36: note: expanded from macro 'CCE'
#define CCE(p)  ((const CollElem *)(p))
                                    ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:79:7: warning: narrowing conversion from 'unsigned long' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        sz = col->elemsize + (sizeof(CollMult) - sizeof(CollElem));
             ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:2: warning: result of multiplication in type 'int' is used as a pointer offset after an implicit widening conversion to type 'ptrdiff_t' [bugprone-implicit-widening-of-multiplication-result]
        tbl += (1 + UCHAR_MAX) * col->elemsize;
        ^
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:9: note: make conversion explicit to silence this warning
        tbl += (1 + UCHAR_MAX) * col->elemsize;
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
               (ptrdiff_t)(           )
/home/sj/1/refactoring-heirloom-grep/before/libuxre/_collelem.c:80:9: note: perform multiplication in a wider type
        tbl += (1 + UCHAR_MAX) * col->elemsize;
               ^~~~~~~~~~~~~~
                (ptrdiff_t)
/home/sj/1/refactoring-heirloom-grep/before/libuxre/colldata.h:57:10: error: 'wcharm.h' file not found with <angled> include; use "quotes" instead [clang-diagnostic-error]
#include <wcharm.h>
         ^~~~~~~~~~
         "wcharm.h"
