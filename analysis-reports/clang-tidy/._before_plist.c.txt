/home/sj/1/refactoring-heirloom-grep/before/grep.h:33:10: error: 'iblok.h' file not found [clang-diagnostic-error]
#include        "iblok.h"
                ^~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/grep.h:70:13: warning: invalid case style for variable 'Eflag' [readability-identifier-naming]
extern int              Eflag;          /* use EREs */
                        ^~~~~
                        eflag
/home/sj/1/refactoring-heirloom-grep/before/grep.h:71:13: warning: invalid case style for variable 'Fflag' [readability-identifier-naming]
extern int              Fflag;          /* use fixed strings */
                        ^~~~~
                        fflag
/home/sj/1/refactoring-heirloom-grep/before/plist.c:50:36: warning: 2 adjacent parameters of 'addpat' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
addpat(struct expr **e, char *pat, long len, enum eflags flg)
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
/home/sj/1/refactoring-heirloom-grep/before/plist.c:50:41: note: the first parameter in the range is 'len'
addpat(struct expr **e, char *pat, long len, enum eflags flg)
                                        ^~~
/home/sj/1/refactoring-heirloom-grep/before/plist.c:50:58: note: the last parameter in the range is 'flg'
addpat(struct expr **e, char *pat, long len, enum eflags flg)
                                                         ^~~
/home/sj/1/refactoring-heirloom-grep/before/plist.c:50:46: note: 'long' and 'enum eflags' may be implicitly converted
addpat(struct expr **e, char *pat, long len, enum eflags flg)
                                             ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:89:24: warning: narrowing conversion from 'unsigned long' to signed type 'long' is implementation-defined [bugprone-narrowing-conversions]
                        addpat(&e, cp, ep ? ep - cp : strlen(cp), nl);
                                            ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:89:34: warning: narrowing conversion from 'unsigned long' to signed type 'long' is implementation-defined [bugprone-narrowing-conversions]
                        addpat(&e, cp, ep ? ep - cp : strlen(cp), nl);
                                                      ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:111:12: warning: integer to pointer cast pessimizes optimization opportunities [performance-no-int-to-ptr]
        if ((ip = ib_open(fn, 0)) == NULL || fstat(ip->ib_fd, &st) < 0) {
                  ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:125:18: warning: narrowing conversion from 'unsigned long' to signed type 'long' is implementation-defined [bugprone-narrowing-conversions]
                addpat(&e, cp, len - nl, nl);
                               ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:134:1: warning: function 'nextch' has cognitive complexity of 41 (threshold 25) [readability-function-cognitive-complexity]
nextch(void)
^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:143:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (oneof)
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:145:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (e == NULL) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:147:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (e->e_flg & E_NULL) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:152:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (cp == NULL) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:156:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (mbcode && *cp & 0200) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:156:13: note: +1
        if (mbcode && *cp & 0200) {
                   ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:157:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if ((n = mbtowc(&wc, cp, MB_LEN_MAX)) < 0) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:164:4: note: +1, nesting level increased to 1
        } else {
          ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:168:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (len >= 0)
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:169:16: note: +2, including nesting penalty of 1, nesting level increased to 2
                return iflag ? mbcode && wc & ~(wchar_t)0177 ?
                             ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:169:48: note: +3, including nesting penalty of 2, nesting level increased to 3
                return iflag ? mbcode && wc & ~(wchar_t)0177 ?
                                                             ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:169:25: note: +1
                return iflag ? mbcode && wc & ~(wchar_t)0177 ?
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: nesting level increased to 4
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:157:4: note: expanded from macro '__tobody'
   ({ int __res;                                                              \
   ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +5, including nesting penalty of 4, nesting level increased to 5
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:158:7: note: expanded from macro '__tobody'
      if (sizeof (c) > 1)                                                     \
      ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +6, including nesting penalty of 5, nesting level increased to 6
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:160:4: note: expanded from macro '__tobody'
          if (__builtin_constant_p (c))                                       \
          ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +7, including nesting penalty of 6, nesting level increased to 7
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:40: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                              ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +1
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:163:27: note: expanded from macro '__tobody'
              __res = __c < -128 || __c > 255 ? __c : (a)[__c];               \
                                 ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +1, nesting level increased to 6
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:165:4: note: expanded from macro '__tobody'
          else                                                                \
          ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:19: note: +1, nesting level increased to 5
                        towlower(wc) : tolower(wc) : wc;
                                       ^
/usr/include/ctype.h:220:22: note: expanded from macro 'tolower'
#  define tolower(c)    __tobody (c, tolower, *__ctype_tolower_loc (), (c))
                        ^
/usr/include/ctype.h:168:7: note: expanded from macro '__tobody'
      else                                                                    \
      ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:173:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if ((e = e->e_nxt) == NULL) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:175:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (!n)
                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:169:18: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                return iflag ? mbcode && wc & ~(wchar_t)0177 ?
                               ^
/home/sj/1/refactoring-heirloom-grep/before/grep.h:85:17: note: expanded from macro 'mbcode'
#define mbcode          (mb_cur_max>1)  /* multibyte characters in use */
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:170:33: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
                        towlower(wc) : tolower(wc) : wc;
                                                     ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:172:6: warning: narrowing conversion from 'unsigned int' to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
        n = e->e_flg & E_NL;
            ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:186:1: warning: function 'outline' has cognitive complexity of 28 (threshold 25) [readability-function-cognitive-complexity]
outline(struct iblok *ip, char *last, size_t moff)
^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:190:2: note: +1, including nesting penalty of 0, nesting level increased to 1
        if (qflag == 0) {
        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:191:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (status == 1)
                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:193:3: note: +2, including nesting penalty of 1, nesting level increased to 2
                if (lflag) {
                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:194:18: note: +3, including nesting penalty of 2, nesting level increased to 3
                        puts(filename ? filename : stdinmsg);
                                      ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:195:5: note: +1, nesting level increased to 2
                } else {
                  ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:198:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (*sol == '\n' && sol > ip->ib_cur)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:198:21: note: +1
                        if (*sol == '\n' && sol > ip->ib_cur)
                                         ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:200:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        while (sol > ip->ib_cur && *sol != '\n')
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:200:28: note: +1
                        while (sol > ip->ib_cur && *sol != '\n')
                                                ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:202:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (sol > ip->ib_cur)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:205:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        for (eol = ip->ib_cur; eol <= last
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:206:6: note: +1
                                        && *eol != '\n'; eol++);
                                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:207:4: note: +3, including nesting penalty of 2, nesting level increased to 3
                        if (!cflag)
                        ^
/home/sj/1/refactoring-heirloom-grep/before/plist.c:211:4: note: +1, nesting level increased to 1
        } else  /* qflag != 0 */
          ^
